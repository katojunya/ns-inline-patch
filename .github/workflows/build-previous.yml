name: "Test emacs-30,29,28,27,26"
on:
  pull_request:
  workflow_dispatch:
  schedule:
  - cron: '0 10 * * *'

jobs:
  build-30:
    needs: build-29
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup to build
      run: sh build/setup.sh
    - name: Build emacs-30.1 with inline patch
      run: sh build/emacs-30.sh -d ${{ github.workspace }} -p inline
    - name: Verification
      run: ${{ github.workspace }}/emacs-30.1/nextstep/Emacs.app/Contents/MacOS/Emacs --batch --eval="(unless (fboundp 'mac-input-method-mode) (error \"The inline-patch is NOT integrated\"))"
  build-29:
    needs: build-28
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup to build
      run: sh build/setup.sh
    - name: Build emacs-29.4 with inline patch
      run: sh build/emacs-29.sh -d ${{ github.workspace }} -p inline
    - name: Verification
      run: ${{ github.workspace }}/emacs-29.4/nextstep/Emacs.app/Contents/MacOS/Emacs --batch --eval="(unless (fboundp 'mac-input-method-mode) (error \"The inline-patch is NOT integrated\"))"
  build-28:
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Setup to build
      run: sh build/setup.sh
    - name: Build emacs-28 with inline patch
      run: sh build/emacs-28.sh -d ${{ github.workspace }}
    - name: Verification
      run: ${{ github.workspace }}/emacs/nextstep/Emacs.app/Contents/MacOS/Emacs --batch --eval="(unless (fboundp 'mac-input-method-mode) (error \"The inline-patch is NOT integrated\"))"
  build-27:
    needs: build-26
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Setup to build
      run: sh build/setup.sh
    - name: Build emacs-27 with inline patch
      run: sh build/emacs-27.1.sh -d ${{ github.workspace }}
    - name: Verification
      run: ${{ github.workspace }}/emacs/nextstep/Emacs.app/Contents/MacOS/Emacs --batch --eval="(unless (fboundp 'mac-input-method-mode) (error \"The inline-patch is NOT integrated\"))"
  build-26:
    runs-on: macos-13
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Setup to build
      run: sh build/setup.sh
    - name: Build emacs-26.3 with inline patch
      run: sh build/emacs-26.3.sh -d ${{ github.workspace }}
    - name: Verification
      run: ${{ github.workspace }}/emacs_ns/emacs-26.3/nextstep/Emacs.app/Contents/MacOS/Emacs --batch --eval="(unless (fboundp 'mac-input-method-mode) (error \"The inline-patch is NOT integrated\"))"
